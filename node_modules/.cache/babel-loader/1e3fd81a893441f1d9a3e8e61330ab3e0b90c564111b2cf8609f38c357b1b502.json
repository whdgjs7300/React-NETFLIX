{"ast":null,"code":"var _jsxFileName = \"/Users/whdgjs7300/Documents/\\u1107\\u1161\\u11A8\\u110C\\u1169\\u11BC\\u1112\\u1165\\u11AB/\\u1100\\u1162\\u110B\\u1175\\u11AB\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/React-NETFLIX/netflix/src/pages/Movies.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { movieAction } from \"../redux/actions/movieAction\";\nimport Pagination from \"react-js-pagination\";\nimport { useState } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport SortBox from \"../components/SortBox\";\nimport FilterBox from \"../components/FilterBox\";\nimport FilteredMovieList from \"../components/FilteredMovieList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movies = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    filterData,\n    withGenres,\n    keyWord,\n    sortBy\n  } = useSelector(state => state.filter);\n\n  // 페이지 네이션 state\n  const [pageNum, setPageNum] = useState(1);\n  // 선택 장르 id\n  const [selectedGenreId, setSelectedGenreId] = useState(null);\n  const handlePageChange = pageNum => {\n    setPageNum(pageNum);\n  };\n  const getTotalMovies = () => {\n    dispatch(movieAction.getFilteredMovies(selectedGenreId, sortBy, pageNum, keyWord));\n  };\n  const handleGenreChange = withGenresID => {\n    setSelectedGenreId(withGenresID);\n    dispatch(movieAction.getFilteredMovies(withGenresID, sortBy, pageNum, keyWord));\n  };\n\n  // 페이지, 장르id, sortBy, 검색키워드가 바뀔 때 마다 비동기 호출\n  useEffect(() => {\n    getTotalMovies();\n  }, [pageNum, sortBy, selectedGenreId, keyWord]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(ClipLoader, {\n      color: \"#ffff\",\n      loading: loading,\n      size: 150\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SortBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FilterBox, {\n        pageNum: pageNum,\n        withGenres: withGenres,\n        onGenreChange: handleGenreChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), filterData && filterData.results.map(item => {\n      return /*#__PURE__*/_jsxDEV(FilteredMovieList, {\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 28\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Pagination, {\n      activePage: pageNum,\n      itemsCountPerPage: 20,\n      totalItemsCount: filterData ? filterData.total_results : 0,\n      pageRangeDisplayed: 5,\n      onChange: handlePageChange,\n      itemClass: \"page-item\",\n      linkClass: \"page-link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Movies, \"kn4DJw23nz37rgdQhRl2HIDwjw0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","movieAction","Pagination","useState","ClipLoader","SortBox","FilterBox","FilteredMovieList","jsxDEV","_jsxDEV","Movies","_s","dispatch","loading","filterData","withGenres","keyWord","sortBy","state","filter","pageNum","setPageNum","selectedGenreId","setSelectedGenreId","handlePageChange","getTotalMovies","getFilteredMovies","handleGenreChange","withGenresID","color","size","fileName","_jsxFileName","lineNumber","columnNumber","children","onGenreChange","results","map","item","activePage","itemsCountPerPage","totalItemsCount","total_results","pageRangeDisplayed","onChange","itemClass","linkClass","_c","$RefreshReg$"],"sources":["/Users/whdgjs7300/Documents/박종헌/개인프로젝트/React-NETFLIX/netflix/src/pages/Movies.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { movieAction } from \"../redux/actions/movieAction\";\nimport Pagination from \"react-js-pagination\";\nimport { useState } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport SortBox from \"../components/SortBox\";\nimport FilterBox from \"../components/FilterBox\";\nimport FilteredMovieList from \"../components/FilteredMovieList\";\n\n\n\nconst Movies = () => {\n    const dispatch = useDispatch();\n    const {loading,filterData ,withGenres, keyWord, sortBy}= \n    useSelector(state=>state.filter);\n    \n\n    \n    // 페이지 네이션 state\n    const [pageNum, setPageNum] = useState(1);\n    // 선택 장르 id\n    const [selectedGenreId, setSelectedGenreId] = useState(null);\n\n    const handlePageChange = (pageNum) => {\n\n    setPageNum(pageNum)\n};\n\n    \n    const getTotalMovies = () =>{\n        dispatch(movieAction.getFilteredMovies(selectedGenreId,sortBy,pageNum,keyWord));\n    }\n    \n    const handleGenreChange = (withGenresID) => {\n\n        setSelectedGenreId(withGenresID);\n        dispatch(movieAction.getFilteredMovies(withGenresID,sortBy,pageNum,keyWord))\n    };\n\n    // 페이지, 장르id, sortBy, 검색키워드가 바뀔 때 마다 비동기 호출\n    useEffect(()=>{\n        getTotalMovies()\n\n    },[pageNum,sortBy,selectedGenreId,keyWord])\n\n\n\n    if(loading){\n        return <ClipLoader color=\"#ffff\" loading={loading} size={150}/>\n    }\n    return ( \n        <div>\n            <div>\n                <SortBox/>\n                <FilterBox \n                pageNum={pageNum} withGenres={withGenres} \n                onGenreChange={handleGenreChange}/>\n            </div>\n            {\n                filterData && filterData.results.map((item)=>{\n                    return <FilteredMovieList item={item}/>\n                })\n            }\n\n<Pagination\n    activePage={pageNum}\n    itemsCountPerPage={20}\n    totalItemsCount={filterData ? filterData.total_results : 0} \n    pageRangeDisplayed={5}\n    onChange={handlePageChange}\n    itemClass=\"page-item\"\n    linkClass=\"page-link\"\n/>\n\n</div>\n    );\n}\n\nexport default Movies;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/whdgjs7300/Documents/\\u1107\\u1161\\u11A8\\u110C\\u1169\\u11BC\\u1112\\u1165\\u11AB/\\u1100\\u1162\\u110B\\u1175\\u11AB\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/React-NETFLIX/netflix/src/pages/Movies.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { movieAction } from \"../redux/actions/movieAction\";\nimport Pagination from \"react-js-pagination\";\nimport { useState } from \"react\";\nimport RelatedCard from \"../components/RelatedCard\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport SortBox from \"../components/SortBox\";\nimport FilterBox from \"../components/FilterBox\";\nimport FilteredMovieList from \"../components/FilteredMovieList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movies = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    pageList,\n    getGenre\n  } = useSelector(state => state.page);\n\n  // 페이지 네이션 state\n  const [activePage, setActivePage] = useState(1);\n  const [selectedGenreId, setSelectedGenreId] = useState(null);\n  const handlePageChange = pageNumber => {\n    setActivePage(pageNumber);\n  };\n  // 하위 컴포넌트에서 전달받을수 있음 !!!! 이부분 수정해야함 잘 \n  console.log(activePage);\n  const getTotalMovies = genreId => {\n    dispatch(movieAction.getPage(activePage, genreId));\n  };\n  const handleGenreChange = genreId => {\n    setSelectedGenreId(genreId);\n    dispatch(movieAction.genreFilter(genreId));\n  };\n\n  // 페이지가 바뀔 때 마다 비동기 호출\n  useEffect(() => {\n    getTotalMovies();\n  }, [activePage]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(ClipLoader, {\n      color: \"#ffff\",\n      loading: loading,\n      size: 150\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SortBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FilterBox, {\n        activePage: activePage,\n        getGenre: getGenre,\n        pageList: pageList,\n        onGenreChange: handleGenreChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), pageList && pageList.results.map(item => {\n      return /*#__PURE__*/_jsxDEV(FilteredMovieList, {\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 28\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Pagination, {\n      activePage: activePage,\n      itemsCountPerPage: 20,\n      totalItemsCount: 2000,\n      pageRangeDisplayed: 5,\n      onChange: handlePageChange,\n      itemClass: \"page-item\",\n      linkClass: \"page-link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Movies, \"SuKSFtdCHhTp6HFFzDrhdejuTro=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","movieAction","Pagination","useState","RelatedCard","ClipLoader","SortBox","FilterBox","FilteredMovieList","jsxDEV","_jsxDEV","Movies","_s","dispatch","loading","pageList","getGenre","state","page","activePage","setActivePage","selectedGenreId","setSelectedGenreId","handlePageChange","pageNumber","console","log","getTotalMovies","genreId","getPage","handleGenreChange","genreFilter","color","size","fileName","_jsxFileName","lineNumber","columnNumber","children","onGenreChange","results","map","item","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","itemClass","linkClass","_c","$RefreshReg$"],"sources":["/Users/whdgjs7300/Documents/박종헌/개인프로젝트/React-NETFLIX/netflix/src/pages/Movies.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { movieAction } from \"../redux/actions/movieAction\";\nimport Pagination from \"react-js-pagination\";\nimport { useState } from \"react\";\nimport RelatedCard from \"../components/RelatedCard\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport SortBox from \"../components/SortBox\";\nimport FilterBox from \"../components/FilterBox\";\nimport FilteredMovieList from \"../components/FilteredMovieList\";\n\n\n\nconst Movies = () => {\n    const dispatch = useDispatch();\n    const {loading, pageList,getGenre }= \n    useSelector(state=>state.page);\n\n\n    // 페이지 네이션 state\n    const [activePage, setActivePage] = useState(1);\n    const [selectedGenreId, setSelectedGenreId] = useState(null);\n\n    const handlePageChange = (pageNumber) => {\n\n    setActivePage(pageNumber);\n};\n// 하위 컴포넌트에서 전달받을수 있음 !!!! 이부분 수정해야함 잘 \n    console.log(activePage)\n    const getTotalMovies = (genreId) =>{\n        dispatch(movieAction.getPage(activePage,genreId));\n    }\n\n    const handleGenreChange = (genreId) => {\n\n        setSelectedGenreId(genreId);\n        dispatch(movieAction.genreFilter(genreId))\n    };\n\n    // 페이지가 바뀔 때 마다 비동기 호출\n    useEffect(()=>{\n        getTotalMovies()\n\n    },[activePage])\n\n\n\n    if(loading){\n        return <ClipLoader color=\"#ffff\" loading={loading} size={150}/>\n    }\n    return ( \n        <div>\n            <div>\n                <SortBox/>\n                <FilterBox \n                activePage={activePage} getGenre={getGenre} \n                pageList={pageList} onGenreChange={handleGenreChange}\n                />\n            </div>\n            {\n                pageList && pageList.results.map((item)=>{\n                    return <FilteredMovieList item={item}/>\n                })\n            }\n\n<Pagination\n    activePage={activePage}\n    itemsCountPerPage={20}\n    totalItemsCount={2000}\n    pageRangeDisplayed={5}\n    onChange={handlePageChange}\n    itemClass=\"page-item\"\n    linkClass=\"page-link\"\n/>\n\n</div>\n    );\n}\n\nexport default Movies;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
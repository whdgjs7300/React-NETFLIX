{"ast":null,"code":"var _jsxFileName = \"/Users/whdgjs7300/Documents/\\u1107\\u1161\\u11A8\\u110C\\u1169\\u11BC\\u1112\\u1165\\u11AB/\\u1100\\u1162\\u110B\\u1175\\u11AB\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/React-NETFLIX/netflix/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Banner from \"../components/Banner\";\nimport MovieSlide from \"../components/MovieSlide\";\nimport { movieAction } from \"../redux/actions/movieAction\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    popularMovies,\n    topRatedMovies,\n    upComingMovies,\n    loading\n  } = useSelector(state => state.movie);\n  useEffect(() => {\n    dispatch(movieAction.getMovies());\n  }, []);\n  // useEffect 특성상 밑에 값이 undefined가 뜸 \n  // 조건부 렌더링을 꼭해야함! (로딩스피너를 안할 때)\n  // loading이 true면 로딩스피너를 보여주고 loading이 false면 데이터를 보여줌\n  // 데이터 도착 전이 true : movieAction으로 \n  // 데이터 도착 후 false Or Error\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(ClipLoader, {\n      color: \"#ffff\",\n      loading: loading,\n      size: 150\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: \"white\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Banner, {\n      movie: popularMovies.results[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"popular Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MovieSlide, {\n      movies: popularMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Top rated Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieSlide, {\n      movies: topRatedMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"upcoming Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieSlide, {\n      movies: upComingMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"Z40KO4VSr418e+fmjcVTfrEdDLU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","Banner","MovieSlide","movieAction","ClipLoader","jsxDEV","_jsxDEV","Home","_s","dispatch","popularMovies","topRatedMovies","upComingMovies","loading","state","movie","getMovies","color","size","fileName","_jsxFileName","lineNumber","columnNumber","style","children","results","movies","_c","$RefreshReg$"],"sources":["/Users/whdgjs7300/Documents/박종헌/개인프로젝트/React-NETFLIX/netflix/src/pages/Home.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Banner from \"../components/Banner\";\nimport MovieSlide from \"../components/MovieSlide\";\nimport { movieAction } from \"../redux/actions/movieAction\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\n\n\nconst Home = () => {\n    const dispatch = useDispatch();\n    const {popularMovies, topRatedMovies, upComingMovies, loading}= \n    useSelector(state=>state.movie);\n    useEffect(()=>{\n        dispatch(movieAction.getMovies())\n    },[]);\n    // useEffect 특성상 밑에 값이 undefined가 뜸 \n    // 조건부 렌더링을 꼭해야함! (로딩스피너를 안할 때)\n    // loading이 true면 로딩스피너를 보여주고 loading이 false면 데이터를 보여줌\n    // 데이터 도착 전이 true : movieAction으로 \n    // 데이터 도착 후 false Or Error\n    \n    if(loading){\n        return <ClipLoader color=\"#ffff\" loading={loading} size={150}/>\n    }\n    return ( \n        <div style={{color : \"white\"}}>\n            <Banner movie={popularMovies.results[0]}/>\n                <h1>popular Movie</h1>\n                <MovieSlide movies={popularMovies}/>\n            <h1>Top rated Movie</h1>\n            <MovieSlide movies={topRatedMovies}/>\n            <h1>upcoming Movie</h1>\n            <MovieSlide movies={upComingMovies}/>\n        </div>\n    );\n}\n\nexport default Home;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,WAAW,QAAQ,8BAA8B;AAC1D,OAAOC,UAAU,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAInD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAM;IAACW,aAAa;IAAEC,cAAc;IAAEC,cAAc;IAAEC;EAAO,CAAC,GAC9Db,WAAW,CAACc,KAAK,IAAEA,KAAK,CAACC,KAAK,CAAC;EAC/BjB,SAAS,CAAC,MAAI;IACVW,QAAQ,CAACN,WAAW,CAACa,SAAS,EAAE,CAAC;EACrC,CAAC,EAAC,EAAE,CAAC;EACL;EACA;EACA;EACA;EACA;;EAEA,IAAGH,OAAO,EAAC;IACP,oBAAOP,OAAA,CAACF,UAAU;MAACa,KAAK,EAAC,OAAO;MAACJ,OAAO,EAAEA,OAAQ;MAACK,IAAI,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EACnE;EACA,oBACIhB,OAAA;IAAKiB,KAAK,EAAE;MAACN,KAAK,EAAG;IAAO,CAAE;IAAAO,QAAA,gBAC1BlB,OAAA,CAACL,MAAM;MAACc,KAAK,EAAEL,aAAa,CAACe,OAAO,CAAC,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACtChB,OAAA;MAAAkB,QAAA,EAAI;IAAa;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACtBhB,OAAA,CAACJ,UAAU;MAACwB,MAAM,EAAEhB;IAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACxChB,OAAA;MAAAkB,QAAA,EAAI;IAAe;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACxBhB,OAAA,CAACJ,UAAU;MAACwB,MAAM,EAAEf;IAAe;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACrChB,OAAA;MAAAkB,QAAA,EAAI;IAAc;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACvBhB,OAAA,CAACJ,UAAU;MAACwB,MAAM,EAAEd;IAAe;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnC;AAEd,CAAC;AAAAd,EAAA,CA3BKD,IAAI;EAAA,QACWR,WAAW,EAE5BC,WAAW;AAAA;AAAA2B,EAAA,GAHTpB,IAAI;AA6BV,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
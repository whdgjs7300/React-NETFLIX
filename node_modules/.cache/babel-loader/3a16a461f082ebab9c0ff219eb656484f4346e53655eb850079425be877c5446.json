{"ast":null,"code":"var _jsxFileName = \"/Users/whdgjs7300/Documents/\\u1107\\u1161\\u11A8\\u110C\\u1169\\u11BC\\u1112\\u1165\\u11AB/\\u1100\\u1162\\u110B\\u1175\\u11AB\\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/React-NETFLIX/netflix/src/components/FilteredMovieList.jsx\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport Badge from 'react-bootstrap/Badge';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilteredMovieList = _ref => {\n  _s();\n  let {\n    item\n  } = _ref;\n  const {\n    withGenres\n  } = useSelector(state => state.filter);\n  let imageUrl = item.poster_path ? `https://www.themoviedb.org/t/p/w710_and_h400_multi_faces/${item.poster_path}` : 'https://t1.daumcdn.net/thumb/R600x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fqna%2Fimage%2F4b035cdf8372d67108f7e8d339660479dfb41bbd';\n  console.log(item);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    style: {\n      backgroundImage: 'url(' + `${imageUrl}` + ')',\n      width: 300,\n      height: 200,\n      backgroundPosition: \"center\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundSize: \"cover\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"card_title\",\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item.genre_ids.map(id => /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"danger\",\n          children:\n          // 장르별 id와 item의 장르 id와 같은 값을 찾음\n          withGenres && withGenres.find(item => item.id === id).name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 42\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uD3C9\\uC810 : \", item.vote_average]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uC5F0\\uB839\\uC81C\\uD55C : \", item.adult ? \"청불\" : \"Under 18\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n_s(FilteredMovieList, \"bKsbSWRYjM1g5zRVNCAdndTuGdo=\", false, function () {\n  return [useSelector];\n});\n_c = FilteredMovieList;\nexport default FilteredMovieList;\nvar _c;\n$RefreshReg$(_c, \"FilteredMovieList\");","map":{"version":3,"names":["useSelector","Badge","jsxDEV","_jsxDEV","FilteredMovieList","_ref","_s","item","withGenres","state","filter","imageUrl","poster_path","console","log","className","style","backgroundImage","width","height","backgroundPosition","backgroundRepeat","backgroundSize","children","title","fileName","_jsxFileName","lineNumber","columnNumber","genre_ids","map","id","bg","find","name","vote_average","adult","_c","$RefreshReg$"],"sources":["/Users/whdgjs7300/Documents/박종헌/개인프로젝트/React-NETFLIX/netflix/src/components/FilteredMovieList.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport Badge from 'react-bootstrap/Badge';\n\nconst FilteredMovieList = ({item}) => {\n    const {withGenres} = useSelector(state=>state.filter);\n\n    let imageUrl = item.poster_path ? `https://www.themoviedb.org/t/p/w710_and_h400_multi_faces/${item.poster_path}` : 'https://t1.daumcdn.net/thumb/R600x0/?fname=http%3A%2F%2Ft1.daumcdn.net%2Fqna%2Fimage%2F4b035cdf8372d67108f7e8d339660479dfb41bbd';\n\n    console.log(item)\n    return ( \n        <div \n        className=\"card\"\n        style={{backgroundImage:\n        'url('+`${imageUrl}`+')', \n        width:300, height:200,\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\"\n        }}>\n\n\n        <div className='overlay'>\n            <h1 className=\"card_title\">{item.title}</h1>\n            <div>{item.genre_ids.map(id=><Badge bg=\"danger\">\n                {// 장르별 id와 item의 장르 id와 같은 값을 찾음\n                withGenres && withGenres.find((item) => item.id === id).name }\n            </Badge>)}\n            \n            </div>\n            <div>\n                <span>평점 : {item.vote_average}</span> <br/>\n                <span>연령제한 : {item.adult ? \"청불\" : \"Under 18\"}</span>\n            </div>\n        </div>\n            \n        </div>\n    );\n}\n\nexport default FilteredMovieList;"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,OAAOC,KAAK,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,iBAAiB,GAAGC,IAAA,IAAY;EAAAC,EAAA;EAAA,IAAX;IAACC;EAAI,CAAC,GAAAF,IAAA;EAC7B,MAAM;IAACG;EAAU,CAAC,GAAGR,WAAW,CAACS,KAAK,IAAEA,KAAK,CAACC,MAAM,CAAC;EAErD,IAAIC,QAAQ,GAAGJ,IAAI,CAACK,WAAW,GAAI,4DAA2DL,IAAI,CAACK,WAAY,EAAC,GAAG,iIAAiI;EAEpPC,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;EACjB,oBACIJ,OAAA;IACAY,SAAS,EAAC,MAAM;IAChBC,KAAK,EAAE;MAACC,eAAe,EACvB,MAAM,GAAE,GAAEN,QAAS,EAAC,GAAC,GAAG;MACxBO,KAAK,EAAC,GAAG;MAAEC,MAAM,EAAC,GAAG;MACrBC,kBAAkB,EAAE,QAAQ;MAC5BC,gBAAgB,EAAE,WAAW;MAC7BC,cAAc,EAAE;IAChB,CAAE;IAAAC,QAAA,eAGFpB,OAAA;MAAKY,SAAS,EAAC,SAAS;MAAAQ,QAAA,gBACpBpB,OAAA;QAAIY,SAAS,EAAC,YAAY;QAAAQ,QAAA,EAAEhB,IAAI,CAACiB;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAC5CzB,OAAA;QAAAoB,QAAA,EAAMhB,IAAI,CAACsB,SAAS,CAACC,GAAG,CAACC,EAAE,iBAAE5B,OAAA,CAACF,KAAK;UAAC+B,EAAE,EAAC,QAAQ;UAAAT,QAAA;UAC1C;UACDf,UAAU,IAAIA,UAAU,CAACyB,IAAI,CAAE1B,IAAI,IAAKA,IAAI,CAACwB,EAAE,KAAKA,EAAE,CAAC,CAACG;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACxD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEH,eACNzB,OAAA;QAAAoB,QAAA,gBACIpB,OAAA;UAAAoB,QAAA,GAAM,iBAAK,EAAChB,IAAI,CAAC4B,YAAY;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,KAAC,eAAAzB,OAAA;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAC3CzB,OAAA;UAAAoB,QAAA,GAAM,6BAAO,EAAChB,IAAI,CAAC6B,KAAK,GAAG,IAAI,GAAG,UAAU;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAClD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEA;AAEd,CAAC;AAAAtB,EAAA,CAlCKF,iBAAiB;EAAA,QACEJ,WAAW;AAAA;AAAAqC,EAAA,GAD9BjC,iBAAiB;AAoCvB,eAAeA,iBAAiB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}